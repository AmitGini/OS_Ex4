gcc -g -O2 -Wall -Wextra -pedantic -std=c11 -c hello.c
hello.c: In function ‘main’:
hello.c:26:5: warning: implicit declaration of function ‘printf’ [-Wimplicit-function-declaration]
   26 |     printf("You entered: %s\n", string_so_far);
      |     ^~~~~~
hello.c:6:1: note: include ‘<stdio.h>’ or provide a declaration of ‘printf’
    5 | #include <string.h>
  +++ |+#include <stdio.h>
    6 | 
hello.c:26:5: warning: incompatible implicit declaration of built-in function ‘printf’ [-Wbuiltin-declaration-mismatch]
   26 |     printf("You entered: %s\n", string_so_far);
      |     ^~~~~~
hello.c:26:5: note: include ‘<stdio.h>’ or provide a declaration of ‘printf’
hello.c:26:5: warning: ‘string_so_far’ may be used uninitialized in this function [-Wmaybe-uninitialized]
   26 |     printf("You entered: %s\n", string_so_far);
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
gcc -g -O2 -Wall -Wextra -pedantic -std=c11 -o hello hello.o
gcc -g -O2 -Wall -Wextra -pedantic -std=c11 -c race.c
gcc -g -O2 -Wall -Wextra -pedantic -std=c11 -o race race.o
valgrind --leak-check=full --show-leak-kinds=all ./hello arg1 arg2 arg3
==7643== Memcheck, a memory error detector
==7643== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==7643== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==7643== Command: ./hello arg1 arg2 arg3
==7643== 
==7643== Invalid write of size 1
==7643==    at 0x484EA4C: strcat (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7643==    by 0x109147: strcat (string_fortified.h:130)
==7643==    by 0x109147: main (hello.c:21)
==7643==  Address 0x4a9c049 is 0 bytes after a block of size 9 alloc'd
==7643==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7643==    by 0x10912E: main (hello.c:15)
==7643== 
==7643== Invalid write of size 1
==7643==    at 0x484EA5E: strcat (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7643==    by 0x109147: strcat (string_fortified.h:130)
==7643==    by 0x109147: main (hello.c:21)
==7643==  Address 0x4a9c04a is 1 bytes after a block of size 9 alloc'd
==7643==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7643==    by 0x10912E: main (hello.c:15)
==7643== 
==7643== Invalid read of size 1
==7643==    at 0x484ED84: __strlen_sse2 (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7643==    by 0x109156: strcat (string_fortified.h:130)
==7643==    by 0x109156: main (hello.c:23)
==7643==  Address 0x4a9c049 is 0 bytes after a block of size 9 alloc'd
==7643==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7643==    by 0x10912E: main (hello.c:15)
==7643== 
==7643== Invalid write of size 2
==7643==    at 0x10915C: strcat (string_fortified.h:130)
==7643==    by 0x10915C: main (hello.c:23)
==7643==  Address 0x4a9c04a is 1 bytes after a block of size 9 alloc'd
==7643==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7643==    by 0x10912E: main (hello.c:15)
==7643== 
==7643== Invalid read of size 1
==7643==    at 0x484EE82: strcpy (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7643==    by 0x10913C: strcpy (string_fortified.h:79)
==7643==    by 0x10913C: main (hello.c:18)
==7643==  Address 0x4a9c049 is 0 bytes after a block of size 9 alloc'd
==7643==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7643==    by 0x10912E: main (hello.c:15)
==7643== 
==7643== Invalid read of size 1
==7643==    at 0x484ED84: __strlen_sse2 (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7643==    by 0x48E6D30: __vfprintf_internal (vfprintf-internal.c:1517)
==7643==    by 0x48D079E: printf (printf.c:33)
==7643==    by 0x10917B: main (hello.c:26)
==7643==  Address 0x4a9c158 is 0 bytes after a block of size 24 alloc'd
==7643==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7643==    by 0x10912E: main (hello.c:15)
==7643== 
==7643== Invalid read of size 1
==7643==    at 0x48FB734: _IO_new_file_xsputn (fileops.c:1218)
==7643==    by 0x48FB734: _IO_file_xsputn@@GLIBC_2.2.5 (fileops.c:1196)
==7643==    by 0x48E700B: outstring_func (vfprintf-internal.c:239)
==7643==    by 0x48E700B: __vfprintf_internal (vfprintf-internal.c:1517)
==7643==    by 0x48D079E: printf (printf.c:33)
==7643==    by 0x10917B: main (hello.c:26)
==7643==  Address 0x4a9c158 is 0 bytes after a block of size 24 alloc'd
==7643==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7643==    by 0x10912E: main (hello.c:15)
==7643== 
==7643== Invalid read of size 1
==7643==    at 0x48534C8: mempcpy (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7643==    by 0x48FB664: _IO_new_file_xsputn (fileops.c:1235)
==7643==    by 0x48FB664: _IO_file_xsputn@@GLIBC_2.2.5 (fileops.c:1196)
==7643==    by 0x48E700B: outstring_func (vfprintf-internal.c:239)
==7643==    by 0x48E700B: __vfprintf_internal (vfprintf-internal.c:1517)
==7643==    by 0x48D079E: printf (printf.c:33)
==7643==    by 0x10917B: main (hello.c:26)
==7643==  Address 0x4a9c158 is 0 bytes after a block of size 24 alloc'd
==7643==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7643==    by 0x10912E: main (hello.c:15)
==7643== 
You entered: 0�./hello arg1 arg2 arg3
==7643== 
==7643== HEAP SUMMARY:
==7643==     in use at exit: 66 bytes in 4 blocks
==7643==   total heap usage: 5 allocs, 1 frees, 1,090 bytes allocated
==7643== 
==7643== 66 bytes in 4 blocks are definitely lost in loss record 1 of 1
==7643==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7643==    by 0x10912E: main (hello.c:15)
==7643== 
==7643== LEAK SUMMARY:
==7643==    definitely lost: 66 bytes in 4 blocks
==7643==    indirectly lost: 0 bytes in 0 blocks
==7643==      possibly lost: 0 bytes in 0 blocks
==7643==    still reachable: 0 bytes in 0 blocks
==7643==         suppressed: 0 bytes in 0 blocks
==7643== 
==7643== For lists of detected and suppressed errors, rerun with: -s
==7643== ERROR SUMMARY: 33 errors from 9 contexts (suppressed: 0 from 0)
valgrind --tool=helgrind ./race
==7644== Helgrind, a thread error detector
==7644== Copyright (C) 2007-2017, and GNU GPL'd, by OpenWorks LLP et al.
==7644== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==7644== Command: ./race
==7644== 
==7644== ---Thread-Announcement------------------------------------------
==7644== 
==7644== Thread #4 was created
==7644==    at 0x499C9F3: clone (clone.S:76)
==7644==    by 0x499D8EE: __clone_internal (clone-internal.c:83)
==7644==    by 0x490B6D8: create_thread (pthread_create.c:295)
==7644==    by 0x490C1FF: pthread_create@@GLIBC_2.34 (pthread_create.c:828)
==7644==    by 0x4853767: ??? (in /usr/libexec/valgrind/vgpreload_helgrind-amd64-linux.so)
==7644==    by 0x109171: main (race.c:24)
==7644== 
==7644== ---Thread-Announcement------------------------------------------
==7644== 
==7644== Thread #3 was created
==7644==    at 0x499C9F3: clone (clone.S:76)
==7644==    by 0x499D8EE: __clone_internal (clone-internal.c:83)
==7644==    by 0x490B6D8: create_thread (pthread_create.c:295)
==7644==    by 0x490C1FF: pthread_create@@GLIBC_2.34 (pthread_create.c:828)
==7644==    by 0x4853767: ??? (in /usr/libexec/valgrind/vgpreload_helgrind-amd64-linux.so)
==7644==    by 0x109171: main (race.c:24)
==7644== 
==7644== ----------------------------------------------------------------
==7644== 
==7644== Possible data race during read of size 8 at 0x10C018 by thread #4
==7644== Locks held: none
==7644==    at 0x1092C3: square (race.c:12)
==7644==    by 0x485396A: ??? (in /usr/libexec/valgrind/vgpreload_helgrind-amd64-linux.so)
==7644==    by 0x490BAC2: start_thread (pthread_create.c:442)
==7644==    by 0x499CA03: clone (clone.S:100)
==7644== 
==7644== This conflicts with a previous write of size 8 by thread #3
==7644== Locks held: none
==7644==    at 0x1092C3: square (race.c:12)
==7644==    by 0x485396A: ??? (in /usr/libexec/valgrind/vgpreload_helgrind-amd64-linux.so)
==7644==    by 0x490BAC2: start_thread (pthread_create.c:442)
==7644==    by 0x499CA03: clone (clone.S:100)
==7644==  Address 0x10c018 is 0 bytes inside data symbol "accum"
==7644== 
==7644== ----------------------------------------------------------------
==7644== 
==7644== Possible data race during write of size 8 at 0x10C018 by thread #4
==7644== Locks held: none
==7644==    at 0x1092C3: square (race.c:12)
==7644==    by 0x485396A: ??? (in /usr/libexec/valgrind/vgpreload_helgrind-amd64-linux.so)
==7644==    by 0x490BAC2: start_thread (pthread_create.c:442)
==7644==    by 0x499CA03: clone (clone.S:100)
==7644== 
==7644== This conflicts with a previous write of size 8 by thread #3
==7644== Locks held: none
==7644==    at 0x1092C3: square (race.c:12)
==7644==    by 0x485396A: ??? (in /usr/libexec/valgrind/vgpreload_helgrind-amd64-linux.so)
==7644==    by 0x490BAC2: start_thread (pthread_create.c:442)
==7644==    by 0x499CA03: clone (clone.S:100)
==7644==  Address 0x10c018 is 0 bytes inside data symbol "accum"
==7644== 
2870
==7644== 
==7644== Use --history-level=approx or =none to gain increased speed, at
==7644== the cost of reduced accuracy of conflicting-access information
==7644== For lists of detected and suppressed errors, rerun with: -s
==7644== ERROR SUMMARY: 36 errors from 2 contexts (suppressed: 344 from 20)

Q5:
hello.c:

    Missing Include:
        Ref: 
            Referring to the code at line 26 using printf, and in the report at lines 6-13.
        Problem:
            The code lacks #include <stdio.h> causing warnings for the implicit declaration.
            Therefore receiving incompatible declaration of the printf function.
        Solution: 
            Add #include <stdio.h> at the top of the code.

    Uninitialized Variable:
        Ref: 
            Referring to the code at lines 12, 17 and 26 using string_so_far, in the report at lines 14-16
        Problem:
            The variable string_so_far is used uninitialized when passed to printf. 
        Solution: 
            Initialize string_so_far to null at its declaration to avoid undefined behavior.

    Memory Errors Detected by Valgrind:

        Invalid Writes and Reads:
            Ref: 
                Invalid writes and reads in the code at lines 15, 18, 21, and 23, and in the report at lines 14-25.
            Problem:
                Strcat and strcpy are used without ensuring sufficient memory allocation.
                Leads to buffer overflows.
            Solution:
                Properly allocate and verify the size of memory blocks before operations.
        
        Memory Leak:
            Ref: 
                Memory allocation performed in the code at line 15, as detailed in the report at lines 26-115.
            Problem:
                66 bytes are reported as definitely lost, indicating that allocated memory was not freed.
            Solution:
                Memory management is required using free() calls for every malloc(), to prevent memory leaks.

Q7:
race.c:

    Race Condition:
        Ref:
        In the report from lines 116, with the relevant code at line 12.
        Problem:
            The global variable accum is accessed and modified by multiple threads without synchronization.
        Solution:
            Use mutexes or other synchronization mechanisms to protect accesses to accum.

    Memory Management:
        Warning:
            The program properly allocates and frees memory for each thread's parameters (params[t]).
            Although the program handled well, it must be implemented carefully,
            To ensure operations are always matched to prevent memory leaks in more complex scenarios.
            (Extra care when Using Multi-Threads (synchronization), Memory allocation, Initialization).